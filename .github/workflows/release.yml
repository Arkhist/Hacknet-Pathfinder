name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Checkout Extra Libraries
      uses: actions/checkout@v2
      with:
        repository: Windows10CE/HacknetPluginTemplate
        path: 'template'

    - name: Copy Libraries
      run: |
        copy template/libs/HacknetPathfinder.exe libs/HacknetPathfinder.exe
        copy template/libs/FNA.dll libs/FNA.dll

    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build Projects
      run: msbuild /p:Configuration=Release /p:DisableBepInExHacknetPrepareForBuild=true

    - name: Create Release Directory
      run: |
        mkdir Release
        mkdir Release/BepInEx
        mkdir Release/BepInEx/core
        mkdir Release/BepInEx/plugins
        mkdir Release/BepInEx/config
        copy PathfinderAPI/bin/Release/PathfinderAPI.dll Release/BepInEx/plugins/
        copy PathfinderUpdater/bin/Release/PathfinderUpdater.dll Release/BepInEx/plugins/
        copy BepInEx.Hacknet/bin/Release/* Release/BepInEx/core/
        copy libs/BepInEx.cfg Release/BepInEx/config/BepInEx.cfg
        copy PathfinderPatcher/bin/Release/PathfinderPatcher.exe Release/PathfinderPatcher.exe
        copy libs/Mono.Cecil.dll Release/Mono.Cecil.dll
        copy Linux/intercept.so Release/intercept.so
        copy Linux/StartPathfinder.sh Release/StartPathfinder.sh

    - name: Create Release ZIP
      uses: TheDoctor0/zip-release@0.6.0
      with:
        type: 'zip'
        filename: 'Pathfinder.Release.zip'
        directory: 'Release'

    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: '3.9'
        
    - name: Install PyInstaller
      run: python -m pip install pyinstaller requests
      
    - name: Build Installer EXE
      run: |
        cd PathfinderInstaller
        pyinstaller --onefile --noconsole PathfinderInstaller.py
        cd ..

    - name: Publish Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Release/Pathfinder.Release.zip
          PathfinderInstaller/dist/PathfinderInstaller.exe
          PathfinderInstaller/PathfinderInstaller.py

  deploy-latest-docs:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          ref: docs
          path: ./docs

      - name: Download MkDocs
        run: sudo python3 -m pip install mkdocs

      - name: Download Doxygen
        run: sudo apt-get install doxygen -y

      - name: Download Doxybook2
        uses: i3h/download-release-asset@v1
        with:
          owner: matusnovak
          repo: doxybook2
          tag: v1.4.0
          file: doxybook2-linux-amd64-v1.4.0.zip
          path: /tmp/release
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Doxybook2
        run: |
          file=$(ls /tmp/release | grep linux)
          unzip "/tmp/release/$file" -d /tmp/doxybook2
          sudo cp /tmp/doxybook2/bin/doxybook2 /usr/local/bin/doxybook2
          sudo chmod +x /usr/local/bin/doxybook2
          doxybook2 --version

      - name: Generate Doxygen
        run: |
          doxygen ./docs/Doxyfile
          mv ./doxygen ./docs/

      - name: Generate Doxybook2
        run: |
          doxybook2 \
            --input ./docs/doxygen/xml
            --output ./docs/mkdocs/doxybook
            --config ./docs/doxybook-config.json
          cd ./docs
          mkdocs build
          cd ./docs

      - name: Deploy Documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: docs
